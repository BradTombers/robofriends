{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSearchChange","event","setState","target","value","state","fetch","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","length","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCUCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACE,sBAAKC,UAAY,sDAAjB,UACC,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAA1B,eACrB,gCACC,6BAAKF,IACL,4BAAIC,WC6CMK,EAnBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACnB,OACC,8BAEGA,EAAOC,KAAI,SAACC,EAAKC,GAClB,OACC,cAAC,EAAD,CAECR,GAAIK,EAAOG,GAAGR,GACdF,KAAQO,EAAOG,GAAGV,KAClBC,MAASM,EAAOG,GAAGT,OAHZM,EAAOG,GAAGR,UC5BRS,EAdG,SAAC,GAA+B,EAA9BC,YAA+B,IAAnBC,EAAkB,EAAlBA,aAC/B,OACC,qBAAKV,UAAY,MAAjB,SACC,uBACCA,UAAY,mCACZW,KAAK,SACLC,YAAY,gBACZC,SAAUH,OCECI,EATA,SAACC,GACf,OACC,qBAAKC,MAAQ,CAACC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,SAAtE,SACEJ,EAAMK,YC0CKC,G,wDAxCd,aAAc,IAAD,8BACZ,gBAaDC,eAAiB,SAACC,GACjB,EAAKC,SAAS,CAACf,YAAac,EAAME,OAAOC,SAbzC,EAAKC,MAAQ,CACZvB,OAAQ,GACRK,YAAa,IAJF,E,gEAQO,IAAD,OAClBmB,MAAM,8CACJtC,MAAK,SAAAuC,GAAQ,OAAIA,EAASC,UAC1BxC,MAAK,SAAAyC,GAAK,OAAK,EAAKP,SAAS,CAACpB,OAAQ2B,S,+BAOhC,IAAD,EACyBC,KAAKL,MAA7BvB,EADD,EACCA,OAAQK,EADT,EACSA,YAEVwB,EAAkB7B,EAAO8B,QAAO,SAAAC,GACrC,OAAOA,EAAMtC,KAAKuC,cAAcC,SAAU5B,EAAY2B,kBAEvD,OAAKhC,EAAOkC,OAIV,sBAAKtC,UAAY,KAAjB,UACC,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWU,aAAgBsB,KAAKV,iBAChC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUlB,OAAU6B,SAPf,oBAAIjC,UAAY,KAAhB,yB,GA1BOuC,IAAMC,Y,MCExBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,EAAD,MAEDC,SAASC,eAAe,SAW1B1D,M","file":"static/js/main.356681f8.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\n\n// const Card = (props) => {\n// \tconst {name, email, id} = props;\n// \tor to make it simpler... \nconst Card = ({name, email, id}) => {\n\treturn (\n\t\t\t<div className = 'tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\n\t\t\t\t<img alt='robots' src={`https://robohash.org/${id}w?200x200`} />\n\t\t\t\t<div>\n\t\t\t\t\t<h2>{name}</h2>\n\t\t\t\t\t<p>{email}</p>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card'\n\n// const CardList = ({ robots }) => {\n// \tconst cardsArray = robots.map((user,i) => {\n// \t\treturn (\n// \t\t\t<Card \n// \t\t\t\tkey = {robots[i].id} \n// \t\t\t\tid={robots[i].id} \n// \t\t\t\tname = {robots[i].name} \n// \t\t\t\temail = {robots[i].email}\n// \t\t\t\t/>\n// \t\t);\n// \t})\n\n\n// \treturn (\t\t\n// \t\t  \t<div>\n// \t\t  \t\t{cardsArray}\n// \t\t  \t</div>\n// \t\t);\n\n// }\n\n\n// const CardList = ({ robots }) => {\n// \tconst cardsArray = robots.map((user,i) => {\n// \t\treturn (\n// \t\t\t<Card \n// \t\t\t\tkey = {robots[i].id} \n// \t\t\t\tid={robots[i].id} \n// \t\t\t\tname = {robots[i].name} \n// \t\t\t\temail = {robots[i].email}\n// \t\t\t\t/>\n// \t\t);\n// \t})\n\nconst CardList = ({ robots }) => {\n\treturn (\t\n\t\t<div> \t\n\t\t\t{\n\t\t  \trobots.map((user,i) => {\n\t\t\t\treturn (\n\t\t\t\t\t<Card \n\t\t\t\t\t\tkey = {robots[i].id} \n\t\t\t\t\t\tid={robots[i].id} \n\t\t\t\t\t\tname = {robots[i].name} \n\t\t\t\t\t\temail = {robots[i].email}\n\t\t\t\t\t\t/>\n\t\t\t\t\t);\n\t\t\t\t})\n\t\t \t}\n\t\t</div>\n\t);\n}\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchfield,searchChange}) => {\n\treturn (\n\t\t<div className = 'pa2'>\n\t\t\t<input \n\t\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\n\t\t\t\ttype='search' \n\t\t\t\tplaceholder='search robots' \n\t\t\t\tonChange={searchChange}\n\t\t\t/>\n\t\t</div>\n\t);\n\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n\treturn (\n\t\t<div style= {{overflowY: 'scroll', border: '1px solid black', height: '800px'}}>\n\t\t\t{props.children}\n\t\t</div>\n\t);\n\n};\n\nexport default Scroll;","import React from 'react';\nimport CardList from '../components/CardList';\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nclass App extends React.Component {\n\tconstructor(){\n\t\tsuper()\n\t\tthis.state = {\n\t\t\trobots: [],\n\t\t\tsearchfield: ''\n\t\t}\n\t}\n\n\tcomponentDidMount(){\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\n\t\t\t.then(response => response.json())\n\t\t\t.then(users => \tthis.setState({robots: users}));\n\t}\n\n\tonSearchChange = (event) => {\n\t\tthis.setState({searchfield: event.target.value })\n\t}\n\n\trender(){\n\t\tconst { robots, searchfield } = this.state;\n\n\t\tconst filteredRobots =  robots.filter(robot =>{\n\t\t\treturn robot.name.toLowerCase().includes( searchfield.toLowerCase());\n\t\t})\n\t\tif (!robots.length){\n\t\t\t\treturn <h1 className = 'tc'>Loading</h1>\n\t\t\t} else {\n\t\t\treturn (\n\t\t\t\t<div className = 'tc'>\n\t\t\t\t\t<h1 className = 'f2'>RoboFriends</h1>\n\t\t\t\t\t<SearchBox searchChange = {this.onSearchChange} />\n\t\t\t\t\t<Scroll>\n\t\t\t\t\t\t<CardList robots = {filteredRobots}/>\n\t\t\t\t\t</Scroll> \n\t\t\t\t</div>\n\t\t\t);\n\t\t}\n\t}\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App'\nimport 'tachyons'\n\nReactDOM.render(\n  <React.StrictMode>\n  \t<App />\n\t</React.StrictMode>,\n  document.getElementById('root')\n);\n\n// ReactDOM.render(\n//     <h1>Hello World </h1>,\n//   document.getElementById('root')\n// );\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}